---
alwaysApply: true
---

## üìã Project Overview

**WhisperShortcut** is a fully functional macOS menu bar application for real-time audio transcription using OpenAI's Whisper API. This is an Xcode project, not a Swift Package Manager project.

### Technology Stack

- **Language**: Swift 5.9+
- **Frameworks**: Cocoa, AVFoundation, UserNotifications
- **API**: OpenAI
- **Build**: Xcode project
- **Target**: macOS 15.5+ (Sequoia or later)

## ‚ö° Critical Rules

- **KISS Principle**: Keep It Simple, Stupid - Always choose the simplest, most elegant solution. Consider multiple approaches, then select the most robust one - not the first that comes to mind
- **Automatic Rebuild & Restart**: **MANDATORY** - After every code change, automatically rebuild and restart the app so the user can immediately see and test the changes. **ALWAYS** use the rebuild script: Run `bash scripts/rebuild-and-restart.sh`
- **Debug Logging**: **MANDATORY** - Always implement comprehensive NSLog statements for any new functionality with emoji prefixes for easy filtering. Use `NSLog()` in production code for debugging (removed before commit), use `print()` in tests for Xcode console output
- **Test-Driven Development**: Write tests first, then implement features - follow the Red-Green-Refactor cycle. Maintain high test coverage for critical functionality, especially API interactions and core business logic
- **Do not run tests automatically** unless explicitly requested by the user
- **Always use the release script** (`./scripts/release.sh`) when creating releases, unless there's a specific reason not to

## üó£Ô∏è Communication and Understanding Rules

- **Understand First**: Always listen and ask clarifying questions before implementing anything. Engage in conversation to fully understand requirements, ask specific questions when unclear, and confirm understanding before proceeding

## üöÄ How to Run the Application

```bash
bash ./scripts/rebuild-and-restart.sh 
```

## üîç Debugging and Logs

### Mandatory Debug Logging

```bash
# Stream all logs in real-time
bash ./scripts/logs.sh

# Filter for specific functionality
bash ./scripts/logs.sh -f 'PROMPT-MODE'

# Show logs from last hour
bash ./scripts/logs.sh -t 1h

# Show help
bash ./scripts/logs.sh -h
```